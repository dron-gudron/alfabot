import os
import threading
import time
import requests
from flask import Flask, request
from telegram import Update, Bot, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
TOKEN = os.getenv("TOKEN")
WEBHOOK_URL = f"https://alfabot-wt8z.onrender.com/{TOKEN}"

app = Flask(__name__)

# --- –¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç ---
bot = Bot(token=TOKEN)
application = Application.builder().token(TOKEN).build()


# --- –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –µ–≤—Ä–æ ---
def get_eur_rate():
    try:
        r = requests.get("https://api.exchangerate.host/latest?base=EUR&symbols=USD,RUB")
        data = r.json()
        eur_usd = data["rates"]["USD"]
        eur_rub = data["rates"]["RUB"]
        return f"üí∂ 1 EUR = {eur_usd:.2f} USD\nüí∂ 1 EUR = {eur_rub:.2f} RUB"
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞:", e)
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å üòï"


# --- –ö–æ–º–∞–Ω–¥—ã ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [KeyboardButton("üí∂ –ö—É—Ä—Å –µ–≤—Ä–æ")],
        [KeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! üëã\n–Ø –ø–æ–∫–∞–∑—ã–≤–∞—é —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å –µ–≤—Ä–æ.\n–í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É –≤ –º–µ–Ω—é –Ω–∏–∂–µ:",
        reply_markup=reply_markup
    )

async def eur_rate(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = get_eur_rate()
    await update.message.reply_text(text)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –µ–≤—Ä–æ üí∂")


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ---
application.add_handler(CommandHandler("start", start))
application.add_handler(CommandHandler("help", help_command))
application.add_handler(MessageHandler(filters.TEXT & filters.Regex("–∫—É—Ä—Å –µ–≤—Ä–æ"), eur_rate))
application.add_handler(MessageHandler(filters.TEXT & filters.Regex("–ø–æ–º–æ—â—å"), help_command))


# --- Flask webhook ---
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    application.create_task(application.process_update(update))
    return "ok", 200


@app.route("/")
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ", 200


# --- –°–∞–º–æ–ø–∏–Ω–≥, —á—Ç–æ–±—ã Render –Ω–µ –∑–∞—Å—ã–ø–∞–ª ---
def ping_self():
    while True:
        try:
            requests.head("https://alfabot-wt8z.onrender.com/")
        except:
            pass
        time.sleep(600)  # –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç


# --- –§–æ–Ω–æ–≤—ã–π –∑–∞–ø—É—Å–∫ Telegram ---
def run_telegram():
    import asyncio
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)

    async def run():
        await application.initialize()
        await bot.set_webhook(WEBHOOK_URL)
        print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")
        await application.start()
        await application.updater.start_polling()
        await asyncio.Event().wait()  # –¥–µ—Ä–∂–∏–º loop –∂–∏–≤—ã–º

    loop.run_until_complete(run())


if __name__ == "__main__":
    threading.Thread(target=ping_self, daemon=True).start()
    threading.Thread(target=run_telegram, daemon=True).start()
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))

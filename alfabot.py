import os
import requests
from flask import Flask, request
from telegram import Bot, Update, ReplyKeyboardMarkup
from telegram.ext import Dispatcher, CommandHandler, MessageHandler, filters

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
TOKEN = os.getenv("TOKEN")
CHAT_ID = os.getenv("CHAT_ID")

bot = Bot(token=TOKEN)
app = Flask(__name__)

# === –ú–µ–Ω—é –∫–æ–º–∞–Ω–¥ ===
menu = ReplyKeyboardMarkup(
    [["üí∂ –ö—É—Ä—Å –µ–≤—Ä–æ", "üíµ –ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞"], ["‚ÑπÔ∏è –ü–æ–º–æ—â—å"]],
    resize_keyboard=True
)

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ===
def start(update, context):
    update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç AlfaBot ü§ñ", reply_markup=menu)

def get_rate(update, context):
    text = update.message.text
    if "–µ–≤—Ä–æ" in text.lower():
        currency = "EUR"
    elif "–¥–æ–ª–ª–∞—Ä" in text.lower():
        currency = "USD"
    else:
        update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –∏–∑ –º–µ–Ω—é üôÇ", reply_markup=menu)
        return

    try:
        res = requests.get(f"https://api.exchangerate.host/latest?base={currency}&symbols=RUB")
        rate = res.json()["rates"]["RUB"]
        update.message.reply_text(f"1 {currency} = {rate:.2f} RUB üá∑üá∫")
    except Exception:
        update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å üòï")

def help_command(update, context):
    update.message.reply_text(
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "üí∂ –ö—É—Ä—Å –µ–≤—Ä–æ ‚Äî —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –µ–≤—Ä–æ –∫ —Ä—É–±–ª—é\n"
        "üíµ –ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ ‚Äî —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ –∫ —Ä—É–±–ª—é\n"
        "/start ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é"
    )

# === Webhook Flask ===
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    dp.process_update(update)
    return "OK"

@app.route("/")
def index():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ"

# === Dispatcher ===
from telegram.ext import Dispatcher
dp = Dispatcher(bot, None, use_context=True)
dp.add_handler(CommandHandler("start", start))
dp.add_handler(CommandHandler("help", help_command))
dp.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, get_rate))

# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Webhook –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ ===
@app.before_first_request
def set_webhook():
    url = f"https://{os.getenv('RENDER_EXTERNAL_HOSTNAME')}/{TOKEN}"
    bot.set_webhook(url)
    print(f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {url}")

# === –ü–∏–Ω–≥ –¥–ª—è Render ===
import threading, time
def ping_self():
    while True:
        try:
            requests.head(f"https://{os.getenv('RENDER_EXTERNAL_HOSTNAME')}")
        except Exception:
            pass
        time.sleep(600)

threading.Thread(target=ping_self, daemon=True).start()

# === –ó–∞–ø—É—Å–∫ ===
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))
